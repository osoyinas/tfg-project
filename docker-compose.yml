services:
  # Frontend
  # frontend:
  #   build:
  #     context: ./front
  #     dockerfile: Dockerfile
  #   env_file:
  #     - front/.env.local
  #   ports:
  #     - "3000:3000"
  #   depends_on:
  #     - catalog-service
  # Gateway API
  gateway:
    build:
      context: ./gateway
      dockerfile: Dockerfile
    env_file:
      - gateway/.env.prod
    ports:
      - "${GATEWAY_PORT}:${GATEWAY_PORT}"
    depends_on:
      - keycloak

  # Keycloak Auth
  keycloak-db:
    image: postgres:16
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: authdb
      POSTGRES_USER: authuser
      POSTGRES_PASSWORD: authpass
    volumes:
      - pgdata:/var/lib/postgresql/data

  keycloak:
    image: quay.io/keycloak/keycloak:24.0.1
    command: start-dev --import-realm
    ports:
      - "8080:8080"
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB: postgres
      KC_DB_URL_HOST: keycloak-db
      KC_DB_URL_PORT: 5432
      KC_DB_URL_DATABASE: authdb
      KC_DB_USERNAME: authuser
      KC_DB_PASSWORD: authpass
    depends_on:
      - keycloak-db
    volumes:
      - ./keycloak:/opt/keycloak/data/import

  # Catalog Service
  catalog-db:
    image: mongo:latest
    container_name: catalog-db
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    restart: unless-stopped
  catalog-service:
    build:
      context: ./catalog-service
      dockerfile: Dockerfile
    env_file:
      - catalog-service/.env.prod
    ports:
      - "${CATALOG_SERVICE_PORT}:${CATALOG_SERVICE_PORT}"
    depends_on:
      - catalog-db
      - rabbitmq

  # Rabbit MQ
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
volumes:
  pgdata:
  mongodb_data:
